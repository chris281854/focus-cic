name: Deploy Docker

on:
  # Runs on pushes targeting the default branch
  push:
    branches: 
      [main,test,devops,dev]
  pull_request: 
    branches: 
        [main]
    types: 
      - closed
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: ${{ github.workflow }}-${{ github.ref}}-${{ inputs.aws-env }}-${{ inputs.github-env }}
    cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Verify dependencies and tests
        run: npm test

      - name: Build Docker image
        run: docker build -t appreact .

      - name: Push to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker push appreact

  docker-run:
    needs: build
 
    runs-on: ubuntu-latest
    steps:
      - name: Start containers with Docker Compose
        run: docker-compose up -d

      - name: Get container IP
        run: |
          CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' Appreact)
          echo "Container IP: $CONTAINER_IP"
